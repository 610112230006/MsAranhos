{"remainingRequest":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/babel-loader/lib/index.js!/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/natthaphongngaongam/developments/MsAranhos/frontend/src/views/users/Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/src/views/users/Users.vue","mtime":1642470780736},{"path":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/babel.config.js","mtime":1611055082000},{"path":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Users.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <b-card-code title=\"รายชื่อผู้ใช้งาน\" no-body>\n    <b-card-body>\n      <div class=\"d-flex justify-content-between flex-wrap align-items-center\">\n        <div class>\n          <b-form-group\n            label=\"Filter\"\n            label-cols-sm=\"2\"\n            label-align-sm=\"left\"\n            label-size=\"sm\"\n            label-for=\"filterInput\"\n            class=\"mb-0\"\n          >\n            <b-input-group size=\"sm\">\n              <b-form-input\n                id=\"filterInput\"\n                v-model=\"filter\"\n                type=\"search\"\n                placeholder=\"Type to Search\"\n              />\n              <b-input-group-append>\n                <b-button :disabled=\"!filter\" @click=\"filter = ''\">\n                  Clear\n                </b-button>\n              </b-input-group-append>\n            </b-input-group>\n          </b-form-group>\n        </div>\n        <b-button variant=\"gradient-primary\" v-b-modal.modal-select2>\n          เพิ่มผู้ใช้งาน\n        </b-button>\n        \n      </div>\n    </b-card-body>\n        <ModelAddUser></ModelAddUser>\n\n    <b-table\n      striped\n      hover\n      responsive\n      class=\"position-relative\"\n      :per-page=\"perPage\"\n      :current-page=\"currentPage\"\n      :items=\"items\"\n      :fields=\"fields\"\n      :sort-by.sync=\"sortBy\"\n      :sort-desc.sync=\"sortDesc\"\n      :sort-direction=\"sortDirection\"\n      :filter=\"filter\"\n      :filter-included-fields=\"filterOn\"\n      @filtered=\"onFiltered\"\n    >\n      <template #cell(avatar)=\"data\">\n        <b-avatar :src=\"data.value\" />\n      </template>\n      <template #cell(status)=\"data\">\n        <b-badge :variant=\"status[1][data.value]\">\n          {{ status[0][data.value] }}\n        </b-badge>\n      </template>\n    </b-table>\n\n    <b-card-body class=\"d-flex justify-content-between flex-wrap pt-0\">\n      <!-- page length -->\n      <b-form-group\n        label=\"Per Page\"\n        label-cols=\"6\"\n        label-align=\"left\"\n        label-size=\"sm\"\n        label-for=\"sortBySelect\"\n        class=\"text-nowrap mb-md-0 mr-1\"\n      >\n        <b-form-select\n          id=\"perPageSelect\"\n          v-model=\"perPage\"\n          size=\"sm\"\n          inline\n          :options=\"pageOptions\"\n        />\n      </b-form-group>\n\n      <!-- pagination -->\n      <div>\n        <b-pagination\n          v-model=\"currentPage\"\n          :total-rows=\"totalRows\"\n          :per-page=\"perPage\"\n          first-number\n          last-number\n          prev-class=\"prev-item\"\n          next-class=\"next-item\"\n          class=\"mb-0\"\n        >\n          <template #prev-text>\n            <feather-icon icon=\"ChevronLeftIcon\" size=\"18\" />\n          </template>\n          <template #next-text>\n            <feather-icon icon=\"ChevronRightIcon\" size=\"18\" />\n          </template>\n        </b-pagination>\n      </div>\n    </b-card-body>\n\n    <template #code>\n      {{ codeKitchenSink }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from \"@core/components/b-card-code/BCardCode.vue\";\nimport ModelAddUser from\"./component/ModelAddUser.vue\"\nimport {\n  BTable,\n  BAvatar,\n  BBadge,\n  BFormGroup,\n  BFormSelect,\n  BPagination,\n  BInputGroup,\n  BFormInput,\n  BInputGroupAppend,\n  BButton,\n  BCardBody,\n  BModal,\n  VBModal,\n} from \"bootstrap-vue\";\nimport { codeKitchenSink } from \"./code\";\n\nexport default {\n  components: {\n    BCardCode,\n    BTable,\n    BAvatar,\n    BBadge,\n    BFormGroup,\n    BFormSelect,\n    BPagination,\n    BInputGroup,\n    BFormInput,\n    BInputGroupAppend,\n    BButton,\n    BCardBody,\n    BModal,\n    VBModal,\n    ModelAddUser\n  },\n  data() {\n    return {\n      selected: \"USA\",\n      option: [\"USA\", \"Canada\", \"Maxico\"],\n      perPage: 5,\n      pageOptions: [3, 5, 10],\n      totalRows: 1,\n      currentPage: 1,\n      sortBy: \"\",\n      sortDesc: false,\n      sortDirection: \"asc\",\n      filter: null,\n      filterOn: [],\n      infoModal: {\n        id: \"info-modal\",\n        title: \"\",\n        content: \"\",\n      },\n      fields: [\n        {\n          key: \"id\",\n          label: \"Id\",\n        },\n        { key: \"full_name\", label: \"Full Name\", sortable: true },\n        \"email\",\n        \"start_date\",\n        { key: \"status\", label: \"Status\", sortable: true },\n      ],\n      /* eslint-disable global-require */\n      items: [\n        {\n          id: 1,\n          avatar: require(\"@/assets/images/avatars/10-small.png\"),\n          full_name: \"Korrie O'Crevy\",\n          post: \"Nuclear Power Engineer\",\n          email: \"kocrevy0@thetimes.co.uk\",\n          city: \"Krasnosilka\",\n          start_date: \"09/23/2016\",\n          salary: \"$23896.35\",\n          age: \"61\",\n          experience: \"1 Year\",\n          status: 2,\n        },\n        {\n          id: 2,\n          avatar: require(\"@/assets/images/avatars/1-small.png\"),\n          full_name: \"Bailie Coulman\",\n          post: \"VP Quality Control\",\n          email: \"bcoulman1@yolasite.com\",\n          city: \"Hinigaran\",\n          start_date: \"05/20/2018\",\n          salary: \"$13633.69\",\n          age: \"63\",\n          experience: \"3 Years\",\n          status: 2,\n        },\n        {\n          id: 3,\n          avatar: require(\"@/assets/images/avatars/9-small.png\"),\n          full_name: \"Stella Ganderton\",\n          post: \"Operator\",\n          email: \"sganderton2@tuttocitta.it\",\n          city: \"Golcowa\",\n          start_date: \"03/24/2018\",\n          salary: \"$13076.28\",\n          age: \"66\",\n          experience: \"6 Years\",\n          status: 5,\n        },\n        {\n          id: 4,\n          avatar: require(\"@/assets/images/avatars/3-small.png\"),\n          full_name: \"Dorolice Crossman\",\n          post: \"Cost Accountant\",\n          email: \"dcrossman3@google.co.jp\",\n          city: \"Paquera\",\n          start_date: \"12/03/2017\",\n          salary: \"$12336.17\",\n          age: \"22\",\n          experience: \"2 Years\",\n          status: 2,\n        },\n        {\n          id: 5,\n          avatar: require(\"@/assets/images/avatars/4-small.png\"),\n          full_name: \"Harmonia Nisius\",\n          post: \"Senior Cost Accountant\",\n          email: \"hnisius4@gnu.org\",\n          city: \"Lucan\",\n          start_date: \"08/25/2017\",\n          salary: \"$10909.52\",\n          age: \"33\",\n          experience: \"3 Years\",\n          status: 2,\n        },\n        {\n          id: 6,\n          avatar: require(\"@/assets/images/avatars/5-small.png\"),\n          full_name: \"Genevra Honeywood\",\n          post: \"Geologist\",\n          email: \"ghoneywood5@narod.ru\",\n          city: \"Maofan\",\n          start_date: \"06/01/2017\",\n          salary: \"$17803.80\",\n          age: \"61\",\n          experience: \"1 Year\",\n          status: 1,\n        },\n        {\n          id: 7,\n          avatar: require(\"@/assets/images/avatars/7-small.png\"),\n          full_name: \"Eileen Diehn\",\n          post: \"Environmental Specialist\",\n          email: \"ediehn6@163.com\",\n          city: \"Lampuyang\",\n          start_date: \"10/15/2017\",\n          salary: \"$18991.67\",\n          age: \"59\",\n          experience: \"9 Years\",\n          status: 3,\n        },\n        {\n          id: 8,\n          avatar: require(\"@/assets/images/avatars/9-small.png\"),\n          full_name: \"Richardo Aldren\",\n          post: \"Senior Sales Associate\",\n          email: \"raldren7@mtv.com\",\n          city: \"Skoghall\",\n          start_date: \"11/05/2016\",\n          salary: \"$19230.13\",\n          age: \"55\",\n          experience: \"5 Years\",\n          status: 3,\n        },\n        {\n          id: 9,\n          avatar: require(\"@/assets/images/avatars/2-small.png\"),\n          full_name: \"Allyson Moakler\",\n          post: \"Safety Technician\",\n          email: \"amoakler8@shareasale.com\",\n          city: \"Mogilany\",\n          start_date: \"12/29/2018\",\n          salary: \"$11677.32\",\n          age: \"39\",\n          experience: \"9 Years\",\n          status: 5,\n        },\n        {\n          id: 10,\n          avatar: require(\"@/assets/images/avatars/6-small.png\"),\n          full_name: \"Merline Penhalewick\",\n          post: \"Junior Executive\",\n          email: \"mpenhalewick9@php.net\",\n          city: \"Kanuma\",\n          start_date: \"04/19/2019\",\n          salary: \"$15939.52\",\n          age: \"23\",\n          experience: \"3 Years\",\n          status: 2,\n        },\n      ],\n      /* eslint-disable global-require */\n      status: [\n        {\n          1: \"Current\",\n          2: \"Professional\",\n          3: \"Rejected\",\n          4: \"Resigned\",\n          5: \"Applied\",\n        },\n        {\n          1: \"light-primary\",\n          2: \"light-success\",\n          3: \"light-danger\",\n          4: \"light-warning\",\n          5: \"light-info\",\n        },\n      ],\n      codeKitchenSink,\n    };\n  },\n  computed: {\n    sortOptions() {\n      // Create an options list from our fields\n      return this.fields\n        .filter((f) => f.sortable)\n        .map((f) => ({ text: f.label, value: f.key }));\n    },\n  },\n  mounted() {\n    // Set the initial number of items\n    this.totalRows = this.items.length;\n  },\n  methods: {\n    info(item, index, button) {\n      this.infoModal.title = `Row index: ${index}`;\n      this.infoModal.content = JSON.stringify(item, null, 2);\n      this.$root.$emit(\"bv::show::modal\", this.infoModal.id, button);\n    },\n    resetInfoModal() {\n      this.infoModal.title = \"\";\n      this.infoModal.content = \"\";\n    },\n    onFiltered(filteredItems) {\n      // Trigger pagination to update the number of buttons/pages due to filtering\n      this.totalRows = filteredItems.length;\n      this.currentPage = 1;\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/views/users"}]}