{"remainingRequest":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/babel-loader/lib/index.js!/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/natthaphongngaongam/developments/MsAranhos/frontend/src/views/import/ImportRep.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/src/views/import/ImportRep.vue","mtime":1644398268787},{"path":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/babel.config.js","mtime":1611055082000},{"path":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ImportRep.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <b-card-code title=\"เลือกไฟล์ Excel REP จาก สปสช. ที่ต้องการนำเข้า\">\n    <b-card-text>\n      ไฟล์ Excel รูปแบบไฟล์ต้องเป็นแบบเดียวกันกับ สปสช. ทุกประการ\n    </b-card-text>\n    <div>\n      <!-- Styled -->\n      <b-form-file\n        v-model=\"file\"\n        type=\"file\"\n        ref=\"file\"\n        @change=\"handleFileUpload($event)\"\n        placeholder=\"Choose a file or drop it here...\"\n        drop-placeholder=\"Drop file here...\"\n      />\n\n      <!-- <b-card-text class=\"my-1\">\n        ไฟล์ที่เลือก : <strong>{{ file ? file.name : \"\" }}</strong>\n      </b-card-text> -->\n      <!-- <b-button variant=\"primary\" v-b-modal.modal-scrollable>\n        ตกลง\n      </b-button> -->\n      <model-custom></model-custom>\n    </div>\n    <div class=\"\">\n      <validation-observer ref=\"simpleRules\">\n        <b-form>\n          <b-form-checkbox\n            v-model=\"selected\"\n            class=\"custom-control-primary mt-2 mb-1\"\n          >\n            กำหนดแถวเอง\n          </b-form-checkbox>\n          <b-row>\n            <b-col md=\"12\">\n              <b-form-group label=\"เลือก Sheets\">\n                <b-form-select v-model=\"sheet\" :options=\"obSelect\" />\n              </b-form-group>\n            </b-col>\n          </b-row>\n          <b-row v-if=\"selected\">\n            <b-col md=\"6\">\n              <b-form-group label=\"เริ่มจาก\">\n                <validation-provider\n                  #default=\"{ errors }\"\n                  name=\"แถวที่เริ่มบันทึกข้อมูล\"\n                  rules=\"required\"\n                >\n                  <b-form-input\n                    v-model=\"start\"\n                    :state=\"errors.length > 0 ? false : null\"\n                    placeholder=\"แถวที่\"\n                  />\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n            </b-col>\n            <b-col md=\"6\">\n              <b-form-group label=\"สิ้นสุด\">\n                <validation-provider\n                  #default=\"{ errors }\"\n                  name=\"แถวที่สิ้นสุดการบันทึกข้อมูล\"\n                  rules=\"required\"\n                >\n                  <b-form-input\n                    v-model=\"end\"\n                    :state=\"errors.length > 0 ? false : null\"\n                    placeholder=\"แถวที่\"\n                  />\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n            </b-col>\n          </b-row>\n          <b-col cols=\"12\">\n            <b-button\n              variant=\"primary\"\n              type=\"submit\"\n              @click.prevent=\"validationForm\"\n            >\n              อัพโหลด\n            </b-button>\n            <b-button\n              class=\"ml-1\"\n              variant=\"secondary\"\n              @click.prevent=\"previewData\"\n            >\n               ดูตัวอย่างข้อมูล\n            </b-button>\n          </b-col>\n        </b-form>\n      </validation-observer>\n    </div>\n    <b-row class=\"mt-2\">\n      <b-col>\n        <b-table responsive :items=\"dataPreview\" class=\"mb-0\"> </b-table>\n      </b-col>\n    </b-row>\n  </b-card-code>\n</template>\n\n<script>\nimport {\n  BCardText,\n  BFormFile,\n  BButton,\n  BFormInput,\n  BFormGroup,\n  BForm,\n  BRow,\n  BFormCheckbox,\n  BTable,\n  BCol,\n  BFormSelect,\n} from \"bootstrap-vue\";\nimport XLSX from \"xlsx\";\nimport ModelCustom from \"./component/ModelCustom.vue\";\nimport { ValidationProvider, ValidationObserver } from \"vee-validate\";\nimport { required, email } from \"@validations\";\nimport BCardCode from \"@core/components/b-card-code\";\nimport useJwt from \"@/auth/jwt/useJwt\";\n\nexport default {\n  components: {\n    BCardCode,\n    BCardText,\n    BFormFile,\n    BButton,\n    ModelCustom,\n    BFormCheckbox,\n    BFormInput,\n    BFormGroup,\n    BForm,\n    BTable,\n    BRow,\n    BCol,\n    ValidationProvider,\n    ValidationObserver,\n    BFormSelect,\n  },\n  data() {\n    return {\n      file: null,\n      end: \"0\",\n      start: \"0\",\n      selected: true,\n      dataPreview: [],\n      sheet: \"\",\n      obSelect: [],\n    };\n  },\n  methods: {\n    validationForm() {\n      var dataPreview = [];\n      this.$refs.simpleRules.validate().then((success) => {\n        if (success) {\n          let formData = new FormData();\n          formData.append(\"files\", this.file);\n\n          if (this.file) {\n            this.$swal({\n              title: \"แน่ใจแล้วหรอ ?\",\n              text: \"ข้อมูลของคุณจะถูกเพิ่มลงฐานข้อมูล!\",\n              icon: \"warning\",\n              showCancelButton: true,\n              confirmButtonColor: \"#3085d6\",\n              cancelButtonColor: \"#d33\",\n              confirmButtonText: \"ยืนยัน\",\n              cancelButtonText: \"ยกเลิก\",\n            }).then((result) => {\n              if (result.isConfirmed) {\n                const reader = new FileReader();\n\n                reader.onload = (e) => {\n                  /* Parse data */\n                  const bstr = e.target.result;\n                  const wb = XLSX.read(bstr, { type: \"binary\" });\n                  /* Get first worksheet */\n                  const ws = wb.Sheets[this.sheet];\n                  /* Convert array of arrays */\n                  const data = XLSX.utils.sheet_to_json(ws, { header: 1 });\n\n                  if (this.selected) {\n                    data.forEach((element, index) => {\n                      var current = index + 1;\n                      if (\n                        current >= parseInt(this.start) &&\n                        current <= parseInt(this.end)\n                      ) {\n                        dataPreview.push(element);\n                      }\n                    });\n                  } else {\n                    dataPreview = data;\n                  }\n                  // this.dataPreview = dataPreview\n                  console.log(dataPreview);\n\n                  this.$http\n                    .post(\"/api/v1/import/reps\", dataPreview, {\n                      headers: {\n                        Authorization: `Bearer ${useJwt.getToken()}`,\n                      },\n                    })\n                    .then((res) => {\n                      console.log(res)\n                      if (res.data.status == 200) {\n                        this.$bvToast.toast(\"import ข้อมูลสำเร็จ\", {\n                          title: \"สำเร็จ\",\n                          variant: \"success\",\n                          solid: true,\n                        });\n                      } else {\n                        this.$bvToast.toast(\"import ข้อมูลไม่สำเร็จ\", {\n                          title: \"ไม่สำเร็จ\",\n                          variant: \"danger\",\n                          solid: true,\n                        });\n                      }\n                    })\n                    .catch((err) => {\n                      console.log(err);\n                    });\n                };\n                reader.readAsBinaryString(this.file);\n              }\n            });\n          } else {\n            this.$bvToast.toast(\"กรุณาเลือกไฟล์\", {\n              title: `ไม่สำเร็จ`,\n              variant: `danger`,\n              solid: true,\n            });\n          }\n        }\n      });\n    },\n    previewData() {\n      var dataPreview = [];\n      this.$refs.simpleRules.validate().then((success) => {\n        if (success) {\n          let formData = new FormData();\n\n          formData.append(\"files\", this.file);\n\n          if (this.file) {\n            const reader = new FileReader();\n\n            reader.onload = (e) => {\n              /* Parse data */\n              const bstr = e.target.result;\n              const wb = XLSX.read(bstr, { type: \"binary\" });\n              /* Get first worksheet */\n              // const wsname = wb.SheetNames[\"รายละเอียด IP\"];\n              // console.log(wsname)\n              const ws = wb.Sheets[this.sheet];\n              /* Convert array of arrays */\n              const data = XLSX.utils.sheet_to_json(ws, { header: 1 });\n\n              if (this.selected) {\n                data.forEach((element, index) => {\n                  var current = index + 1;\n                  if (\n                    current >= parseInt(this.start) &&\n                    current <= parseInt(this.end)\n                  ) {\n                    dataPreview.push(element);\n                  }\n                });\n              } else {\n                dataPreview = data;\n              }\n              this.dataPreview = dataPreview;\n              console.log(dataPreview);\n            };\n            reader.readAsBinaryString(this.file);\n          } else {\n            this.$bvToast.toast(\"กรุณาเลือกไฟล์\", {\n              title: `ไม่สำเร็จ`,\n              variant: `danger`,\n              solid: true,\n            });\n          }\n        }\n      });\n    },\n\n    handleFileUpload(event) {\n      this.file = event.target.files[0];\n\n      if (this.file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          /* Parse data */\n          const bstr = e.target.result;\n          const wb = XLSX.read(bstr, { type: \"binary\" });\n          /* Get first worksheet */\n          // const wsname = wb.SheetNames[\"รายละเอียด IP\"];\n          const sheetList = wb.SheetNames; //Array of sheet names.\n          this.obSelect = sheetList;\n          console.log(sheetList);\n          // const ws = wb.Sheets[this.sheet];\n          // const data = XLSX.utils.sheet_to_json(ws, { header: 1 });\n        };\n        reader.readAsBinaryString(this.file);\n      }\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/views/import"}]}