{"remainingRequest":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/natthaphongngaongam/developments/MsAranhos/frontend/src/views/Login.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/src/views/Login.vue","mtime":1642699329825},{"path":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/natthaphongngaongam/developments/MsAranhos/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIkBjb3JlL3Njc3MvdnVlL3BhZ2VzL3BhZ2UtYXV0aC5zY3NzIjsK"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8OA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"auth-wrapper auth-v2\">\n    <b-row class=\"auth-inner m-0\">\n      <!-- Brand logo-->\n      <b-link class=\"brand-logo\">\n        <vuexy-logo />\n        <h2 class=\"brand-text text-primary ml-1\">MSAranHos</h2>\n      </b-link>\n      <!-- /Brand logo-->\n\n      <!-- Left Text-->\n      <b-col lg=\"8\" class=\"d-none d-lg-flex align-items-center p-5\">\n        <div\n          class=\"w-100 d-lg-flex align-items-center justify-content-center px-5\"\n        >\n          <b-img fluid :src=\"imgUrl\" alt=\"Login V2\" />\n        </div>\n      </b-col>\n      <!-- /Left Text-->\n\n      <!-- Login-->\n      <b-col lg=\"4\" class=\"d-flex align-items-center auth-bg px-2 p-lg-5\">\n        <b-col sm=\"8\" md=\"6\" lg=\"12\" class=\"px-xl-2 mx-auto\">\n          <b-card-title title-tag=\"h2\" class=\"font-weight-bold mb-1\">\n            Welcome to MsAranhos! üëã\n          </b-card-title>\n\n          <!-- form -->\n          <validation-observer ref=\"simpleRules\">\n            <b-form class=\"auth-login-form mt-2\" @submit.prevent=\"isLogin\">\n              <!-- email -->\n              <b-form-group label=\"‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ\" label-for=\"login-email\">\n                <validation-provider\n                  #default=\"{ errors }\"\n                  name=\"‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ\"\n                  rules=\"required\"\n                >\n                  <b-form-input\n                    id=\"login-email\"\n                    v-model=\"username\"\n                    :state=\"errors.length > 0 ? false : null\"\n                    name=\"username\"\n                    placeholder=\"‡∏Å‡∏£‡∏≠‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ\"\n                  />\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n\n              <!-- forgot password -->\n              <b-form-group>\n                <div class=\"d-flex justify-content-between\">\n                  <label for=\"login-password\">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</label>\n                  <b-link :to=\"{ name: 'auth-forgot-password-v2' }\">\n                    <small>Forgot Password?</small>\n                  </b-link>\n                </div>\n                <validation-provider\n                  #default=\"{ errors }\"\n                  name=\"Password\"\n                  vid=\"password\"\n                  rules=\"required|min:8\"\n                >\n                  <b-input-group\n                    class=\"input-group-merge\"\n                    :class=\"errors.length > 0 ? 'is-invalid' : null\"\n                  >\n                    <b-form-input\n                      id=\"login-password\"\n                      v-model=\"password\"\n                      class=\"form-control-merge\"\n                      :state=\"errors.length > 0 ? false : null\"\n                      :type=\"passwordFieldType\"\n                      name=\"login-password\"\n                      placeholder=\"¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\"\n                    />\n                    <b-input-group-append is-text>\n                      <feather-icon\n                        class=\"cursor-pointer\"\n                        :icon=\"passwordToggleIcon\"\n                        @click=\"togglePasswordVisibility\"\n                      />\n                    </b-input-group-append>\n                  </b-input-group>\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n\n              <!-- checkbox -->\n              <b-form-group>\n                <b-form-checkbox\n                  id=\"remember-me\"\n                  v-model=\"status\"\n                  name=\"checkbox-1\"\n                >\n                  Remember Me\n                </b-form-checkbox>\n              </b-form-group>\n\n              <!-- submit buttons -->\n              <b-button type=\"submit\" variant=\"primary\" block>\n                Sign in\n              </b-button>\n            </b-form>\n          </validation-observer>\n        </b-col>\n      </b-col>\n      <!-- /Login-->\n    </b-row>\n  </div>\n</template>\n\n<script>\n/* eslint-disable global-require */\n\nimport VuexyLogo from \"@core/layouts/components/Logo.vue\";\nimport {\n  BRow,\n  BCol,\n  BLink,\n  BFormGroup,\n  BFormInput,\n  BInputGroupAppend,\n  BInputGroup,\n  BFormCheckbox,\n  BCardText,\n  BCardTitle,\n  BImg,\n  BForm,\n  BButton,\n} from \"bootstrap-vue\";\nimport { required, email, min } from \"@validations\";\nimport { togglePasswordVisibility } from \"@core/mixins/ui/forms\";\nimport store from \"@/store/index\";\nimport ToastificationContent from \"@core/components/toastification/ToastificationContent.vue\";\nimport router from \"@/router\";\nimport { getHomeRouteForLoggedInUser } from \"@/auth/utils\";\nimport useJwt from \"@/auth/jwt/useJwt\";\nimport { ValidationProvider, ValidationObserver } from \"vee-validate\";\n\nexport default {\n  components: {\n    BRow,\n    BCol,\n    BLink,\n    BFormGroup,\n    BFormInput,\n    BInputGroupAppend,\n    BInputGroup,\n    BFormCheckbox,\n    BCardText,\n    BCardTitle,\n    BImg,\n    BForm,\n    BButton,\n    VuexyLogo,\n    ValidationProvider,\n    ValidationObserver,\n  },\n  mixins: [togglePasswordVisibility],\n  data() {\n    return {\n      status: \"\",\n      password: \"\",\n      username: \"\",\n      sideImg: require(\"@/assets/images/pages/login-v2.svg\"),\n      // validation rulesimport store from '@/store/index'\n      required,\n      email,\n    };\n  },\n  computed: {\n    passwordToggleIcon() {\n      return this.passwordFieldType === \"password\" ? \"EyeIcon\" : \"EyeOffIcon\";\n    },\n    imgUrl() {\n      if (store.state.appConfig.layout.skin === \"dark\") {\n        // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n        this.sideImg = require(\"@/assets/images/pages/login-v2-dark.svg\");\n        return this.sideImg;\n      }\n      return this.sideImg;\n    },\n  },\n  methods: {\n    isLogin() {\n      this.$refs.simpleRules.validate().then((success) => {\n        if (success) {\n          let data = {\n            username: this.username,\n            password: this.password,\n          };\n          this.$http.post(\"api/v1/auth/login\", data).then((res) => {\n            if (res.data.token) {\n              const { userData } = res.data;\n              localStorage.setItem(\"token\", res.data.token);\n              localStorage.setItem(\"userData\", JSON.stringify(userData));\n              this.$store.dispatch(\"verticalMenu/getRole\");\n              this.$router\n                .replace(getHomeRouteForLoggedInUser(userData.role))\n                .then(() => {\n                  this.$toast({\n                    component: ToastificationContent,\n                    position: \"top-right\",\n                    props: {\n                      title: `‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö ${\n                        userData.firstname || userData.username\n                      }`,\n                      icon: \"CoffeeIcon\",\n                      variant: \"success\",\n                      text: `‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏∞ ${userData.role}. ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß!`,\n                    },\n                  });\n                });\n            } else {\n              if (res.data.message == \"username not found\") {\n                this.$bvToast.toast(\"‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á\", {\n                  title: `‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`,\n                  variant: \"danger\",\n                  solid: true,\n                });\n              }\n              if (res.data.message == \"password not found\") {\n                this.$bvToast.toast(\"‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á\", {\n                  title: `‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`,\n                  variant: \"danger\",\n                  solid: true,\n                });\n              }\n            }\n          });\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"@core/scss/vue/pages/page-auth.scss\";\n</style>\n"]}]}